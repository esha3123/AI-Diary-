<nav class="github-navbar">
  <div class="nav-container">
    <!-- Left side - Brand and main nav -->
    <div class="nav-left">
      <a class="nav-brand" href="/">
        <i class="fa-solid fa-book-open-reader" style="color: var(--accent-blue); font-size: 24px;"></i>
        <span class="brand-name">AI Diary</span>
      </a>
      
      <!-- Desktop Navigation -->
      <div class="nav-menu desktop-nav">
        <a href="/AI-diary" class="nav-item">
          <i class="fas fa-home"></i>
          <span>Home</span>
        </a>
        <a href="/AI-diary/new" class="nav-item">
          <i class="fas fa-plus"></i>
          <span>New Entry</span>
        </a>
        <div class="nav-dropdown">
          <button class="nav-item dropdown-trigger">
            <i class="fas fa-chart-line"></i>
            <span>Analytics</span>
            <i class="fas fa-chevron-down dropdown-arrow"></i>
          </button>
          <div class="dropdown-content">
            <a href="/AI-diary/analytics" class="dropdown-item">
              <i class="fas fa-chart-pie"></i>
              <span>Mood Analytics</span>
            </a>
            <a href="/AI-diary/analytics" class="dropdown-item">
              <i class="fas fa-chart-bar"></i>
              <span>Entry Statistics</span>
            </a>
            <div class="dropdown-divider"></div>
            <a href="/AI-diary/profile" class="dropdown-item">
              <i class="fas fa-user"></i>
              <span>Profile Settings</span>
            </a>
          </div>
        </div>
        <a href="/AI-diary/public" class="nav-item">
          <i class="fas fa-globe"></i>
          <span>Public Wall</span>
        </a>
      </div>
    </div>

    <!-- Right side - Auth buttons -->
    <div class="nav-right">
      <div class="auth-buttons desktop-auth">
        <a href="/AI-diary/logout" class="btn-secondary">
          <i class="fas fa-sign-in-alt"></i>
          <span>Log out</span>
        </a>
        
      </div>
      
      <!-- Mobile menu button -->
      <button class="mobile-menu-btn" id="mobileMenuBtn" aria-label="Toggle mobile menu">
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
        <span class="hamburger-line"></span>
      </button>
    </div>
  </div>

  <!-- Mobile Navigation Menu -->
  <div class="mobile-nav" id="mobileNav">
    <div class="mobile-nav-content">
      <div class="mobile-nav-section">
        <h4>Navigation</h4>
        <a href="/AI-diary/home" class="mobile-nav-item">
          <i class="fas fa-home"></i>
          <span>Home</span>
        </a>
        <a href="/AI-diary/new" class="mobile-nav-item">
          <i class="fas fa-plus"></i>
          <span>New Entry</span>
        </a>
        <a href="/AI-diary/public" class="mobile-nav-item">
          <i class="fas fa-globe"></i>
          <span>Public Wall</span>
        </a>
      </div>
      
      <div class="mobile-nav-section">
        <h4>Analytics</h4>
        <a href="/AI-diary/analytics" class="mobile-nav-item">
          <i class="fas fa-chart-pie"></i>
          <span>Mood Analytics</span>
        </a>
        <a href="/AI-diary/analytics" class="mobile-nav-item">
          <i class="fas fa-chart-bar"></i>
          <span>Entry Statistics</span>
        </a>
        <a href="/AI-diary/profile" class="mobile-nav-item">
          <i class="fas fa-user"></i>
          <span>Profile Settings</span>
        </a>
      </div>
      
      <div class="mobile-nav-section">
        <h4>Account</h4>
        <a href="/login" class="mobile-nav-item">
          <i class="fas fa-sign-in-alt"></i>
          <span>Log out</span>
        </a>
        
      </div>
    </div>
  </div>

  <!-- Mobile nav overlay -->
  <div class="mobile-nav-overlay" id="mobileNavOverlay"></div>
</nav>

<script>
document.addEventListener('DOMContentLoaded', function() {
  console.log('Navbar script initialized');
  
  // Get all required elements with error checking
  const mobileMenuBtn = document.getElementById('mobileMenuBtn');
  const mobileNav = document.getElementById('mobileNav');
  const mobileNavOverlay = document.getElementById('mobileNavOverlay');
  const dropdownTrigger = document.querySelector('.dropdown-trigger');
  const dropdown = document.querySelector('.nav-dropdown');
  const body = document.body;
  
  // Validate elements
  if (!mobileMenuBtn) console.error('Mobile menu button not found');
  if (!mobileNav) console.error('Mobile nav not found');
  if (!mobileNavOverlay) console.error('Mobile nav overlay not found');
  if (!dropdownTrigger) console.error('Dropdown trigger not found');
  if (!dropdown) console.error('Dropdown not found');

  // Auto-highlight active page
  function setActivePage() {
    try {
      const currentPath = window.location.pathname;
      const navItems = document.querySelectorAll('.nav-item:not(.dropdown-trigger)');
      const mobileNavItems = document.querySelectorAll('.mobile-nav-item');
      
      console.log('Current path:', currentPath);
      
      // Remove active class from all items
      navItems.forEach(item => item.classList.remove('active'));
      mobileNavItems.forEach(item => item.classList.remove('active'));
      
      // Add active class to current page
      [...navItems, ...mobileNavItems].forEach(item => {
        const href = item.getAttribute('href');
        if (href && (
          href === currentPath || 
          (currentPath.includes('home') && href.includes('home')) ||
          (currentPath.includes('new') && href.includes('new')) ||
          (currentPath.includes('analytics') && href.includes('analytics')) ||
          (currentPath.includes('public') && href.includes('public')) ||
          (currentPath.includes('profile') && href.includes('profile'))
        )) {
          item.classList.add('active');
          console.log('Set active for:', href);
        }
      });
    } catch (error) {
      console.error('Error setting active page:', error);
    }
  }

  // Mobile navigation functionality
  function toggleMobileNav() {
    if (!mobileNav || !mobileNavOverlay || !mobileMenuBtn) {
      console.error('Mobile nav elements missing');
      return;
    }
    
    const isOpen = mobileNav.classList.contains('active');
    console.log('Mobile nav toggle, currently open:', isOpen);
    
    if (isOpen) {
      mobileNav.classList.remove('active');
      mobileNavOverlay.classList.remove('active');
      mobileMenuBtn.classList.remove('active');
      body.classList.remove('nav-open');
      body.style.overflow = '';
    } else {
      mobileNav.classList.add('active');
      mobileNavOverlay.classList.add('active');
      mobileMenuBtn.classList.add('active');
      body.classList.add('nav-open');
      body.style.overflow = 'hidden';
    }
  }

  // Desktop dropdown functionality
  function toggleDropdown(e) {
    if (!dropdown) {
      console.error('Dropdown element missing');
      return;
    }
    
    e.preventDefault();
    e.stopPropagation();
    
    const isOpen = dropdown.classList.contains('active');
    console.log('Dropdown toggle, currently open:', isOpen);
    
    // Close all other dropdowns
    document.querySelectorAll('.nav-dropdown.active').forEach(d => {
      if (d !== dropdown) d.classList.remove('active');
    });
    
    dropdown.classList.toggle('active');
  }

  // Event listeners with error handling
  if (mobileMenuBtn) {
    mobileMenuBtn.addEventListener('click', function(e) {
      e.preventDefault();
      e.stopPropagation();
      toggleMobileNav();
    });
    
    // Add keyboard support
    mobileMenuBtn.addEventListener('keydown', function(e) {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        toggleMobileNav();
      }
    });
    
    console.log('Mobile menu button listeners added');
  }
  
  if (mobileNavOverlay) {
    mobileNavOverlay.addEventListener('click', toggleMobileNav);
  }
  
  if (dropdownTrigger) {
    dropdownTrigger.addEventListener('click', toggleDropdown);
    
    // Add keyboard support
    dropdownTrigger.addEventListener('keydown', function(e) {
      if (e.key === 'Enter' || e.key === ' ') {
        e.preventDefault();
        toggleDropdown(e);
      }
    });
    
    console.log('Dropdown trigger listeners added');
  }
  
  // Close mobile nav when clicking nav items
  document.querySelectorAll('.mobile-nav-item').forEach(item => {
    item.addEventListener('click', function() {
      setTimeout(() => {
        if (mobileNav && mobileNav.classList.contains('active')) {
          toggleMobileNav();
        }
      }, 150);
    });
  });
  
  // Close dropdown when clicking outside
  document.addEventListener('click', function(e) {
    if (dropdown && !dropdown.contains(e.target)) {
      dropdown.classList.remove('active');
    }
  });
  
  // Handle escape key
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      if (dropdown && dropdown.classList.contains('active')) {
        dropdown.classList.remove('active');
      }
      if (mobileNav && mobileNav.classList.contains('active')) {
        toggleMobileNav();
      }
    }
  });
  
  // Handle window resize
  window.addEventListener('resize', function() {
    if (window.innerWidth >= 993 && mobileNav && mobileNav.classList.contains('active')) {
      toggleMobileNav();
    }
  });
  
  // Touch event handling for better mobile experience
  let touchStartY = 0;
  
  if (mobileNav) {
    mobileNav.addEventListener('touchstart', function(e) {
      touchStartY = e.touches[0].clientY;
    }, { passive: true });
    
    mobileNav.addEventListener('touchmove', function(e) {
      // Allow scrolling within the mobile nav
      e.stopPropagation();
    }, { passive: true });
  }
  
  // Initialize active page highlighting
  setActivePage();
  
  console.log('Navbar initialization complete');
});
</script>